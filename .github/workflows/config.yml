name: API Tests

on:
  push:
    branches:
      - main

jobs:
  api-tests:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Установка Docker и Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 3. Запуск тестов
      - name: Run API tests via Docker Compose
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          docker-compose up --abort-on-container-exit --exit-code-from api-tests

      # 4. Генерация отчёта Allure
      - name: Generate Allure report
        run: |
          docker-compose run --rm api-tests /bin/sh -c "allure generate allure-results --clean -o allure-report"

      # 5. Деплой отчёта на GitHub Pages
      - name: Deploy Allure report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.CI_API_TOKEN }}
          branch: gh-pages
          folder: allure-report
          clean: true



#name: API Tests
#
#on: [push]
#
#jobs:
#  api-tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Run api-tests via docker-compose
#        env:
#          API_TOKEN: ${{ secrets.API_TOKEN }}
#        run: |
#          docker-compose up --exit-code-from users || true
#
#      - name: Generate Allure report
#        run: |
#          sudo docker-compose run users /bin/sh -c "allure generate allure-results --clean -o allure-report"
#
#      - name: Deploy to GitHub Pages
#        uses: JamesIves/github-pages-deploy-action@4.1.5
#        with:
#          token: ${{ secrets.CI_API_TOKEN }}
#          branch: gh-pages
#          folder: allure-report
#          clean: true
