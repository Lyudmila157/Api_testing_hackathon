{
  "uid" : "b2ccfdd525df1338",
  "name" : "Get user's wishlist",
  "fullName" : "tests.test_wishlist.TestWishlist#test_get_user_wishlist",
  "historyId" : "01f9f47c854689402929e44ee2da6c3c",
  "time" : {
    "start" : 1734177622323,
    "stop" : 1734177622889,
    "duration" : 566
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: {'code': 422, 'message': 'Users limit is reached: 20'}",
  "statusTrace" : "self = <test_wishlist.TestWishlist object at 0x7f26c2185ab0>\n\n    @pytest.mark.wishlist\n    @allure.title(\"Get user's wishlist\")\n    def test_get_user_wishlist(self):\n>       new_user = self.api_users.create_user_and_uuid_with_model_unique()\n\ntests/test_wishlist.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.api_users.UsersAPI object at 0x7f26bdfa52d0>\n\n    @allure.step(\"Create user and uuid with model unique\")\n    def create_user_and_uuid_with_model_unique(self):\n        user_data = generate_unique_user_data()\n        response = requests.post(\n            url=self.endpoints.create_user,\n            headers=self.headers.basic_api_3,\n            json=user_data\n        )\n>       assert response.status_code == 200, response.json()\nE       AssertionError: {'code': 422, 'message': 'Users limit is reached: 20'}\n\nservices/users/api_users.py:33: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestWishlist",
    "time" : {
      "start" : 1734177622323,
      "stop" : 1734177622323,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1734177570689,
      "stop" : 1734177570691,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_environment",
    "time" : {
      "start" : 1734177570691,
      "stop" : 1734177573568,
      "duration" : 2877
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: {'code': 422, 'message': 'Users limit is reached: 20'}",
    "statusTrace" : "self = <test_wishlist.TestWishlist object at 0x7f26c2185ab0>\n\n    @pytest.mark.wishlist\n    @allure.title(\"Get user's wishlist\")\n    def test_get_user_wishlist(self):\n>       new_user = self.api_users.create_user_and_uuid_with_model_unique()\n\ntests/test_wishlist.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.api_users.UsersAPI object at 0x7f26bdfa52d0>\n\n    @allure.step(\"Create user and uuid with model unique\")\n    def create_user_and_uuid_with_model_unique(self):\n        user_data = generate_unique_user_data()\n        response = requests.post(\n            url=self.endpoints.create_user,\n            headers=self.headers.basic_api_3,\n            json=user_data\n        )\n>       assert response.status_code == 200, response.json()\nE       AssertionError: {'code': 422, 'message': 'Users limit is reached: 20'}\n\nservices/users/api_users.py:33: AssertionError",
    "steps" : [ {
      "name" : "Create user and uuid with model unique",
      "time" : {
        "start" : 1734177622323,
        "stop" : 1734177622889,
        "duration" : 566
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: {'code': 422, 'message': 'Users limit is reached: 20'}\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/services/users/api_users.py\", line 33, in create_user_and_uuid_with_model_unique\n    assert response.status_code == 200, response.json()\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestWishlist::0",
    "time" : {
      "start" : 1734177622895,
      "stop" : 1734177622895,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Users Wishlist"
  }, {
    "name" : "feature",
    "value" : "Wishlist"
  }, {
    "name" : "tag",
    "value" : "wishlist"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_wishlist"
  }, {
    "name" : "subSuite",
    "value" : "TestWishlist"
  }, {
    "name" : "host",
    "value" : "b31b43372ac2"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_wishlist"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "2bed28047dda36c9",
        "status" : "passed",
        "time" : {
          "start" : 1734120737430,
          "stop" : 1734120739365,
          "duration" : 1935
        }
      }, {
        "uid" : "acef2a8012251548",
        "status" : "passed",
        "time" : {
          "start" : 1734075260136,
          "stop" : 1734075262674,
          "duration" : 2538
        }
      }, {
        "uid" : "7b3f7bfe4e8fc376",
        "status" : "passed",
        "time" : {
          "start" : 1733775959701,
          "stop" : 1733775962469,
          "duration" : 2768
        }
      } ]
    },
    "tags" : [ "wishlist" ]
  },
  "source" : "b2ccfdd525df1338.json",
  "parameterValues" : [ ]
}